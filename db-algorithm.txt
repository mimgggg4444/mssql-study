1. 인덱스 알고리즘
   - B-트리 인덱스: 균형 잡힌 트리 구조로 데이터를 빠르게 검색할 수 있습니다.
   - 클러스터형 인덱스: 테이블의 물리적 순서를 인덱스 키 값에 따라 정렬합니다.
   - 비클러스터형 인덱스: 인덱스와 데이터가 별도로 저장되어 추가 디스크 I/O가 필요합니다.

2. 조인 알고리즘
   - Nested Loop 조인: 중첩 루프를 사용하여 두 테이블을 조인합니다. 작은 테이블에 적합합니다.
   - Merge 조인: 두 테이블을 정렬한 후 병합하여 조인합니다. 대용량 데이터에 효과적입니다.
   - Hash 조인: 해시 테이블을 사용하여 조인을 수행합니다. 대용량 데이터 및 동등 조인에 적합합니다.

3. 정렬 알고리즘
   - Quick Sort: 분할 정복 알고리즘을 사용하여 데이터를 정렬합니다.
   - Merge Sort: 데이터를 분할, 정렬 및 병합하는 과정을 거칩니다.

4. 집계 알고리즘
   - Hash Aggregate: 해시 테이블을 사용하여 그룹화 및 집계를 수행합니다.
   - Stream Aggregate: 데이터를 스트리밍하면서 집계를 수행합니다.

5. 분할 알고리즘
   - Round Robin: 데이터를 균등하게 분할합니다.
   - Hash: 해시 함수를 사용하여 데이터를 분할합니다.
   - Range: 지정된 범위에 따라 데이터를 분할합니다.

MSSQL 옵티마이저는 쿼리 실행 계획을 생성할 때 이러한 알고리즘을 선택하고 조합하여 최적의 성능을 달성하려 합니다.
